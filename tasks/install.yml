---

- name: Ensure couchdb network is created in Docker
  community.docker.docker_network:
    name: "{{ couchdb_container_network }}"
    driver: bridge


- name: Ensure couchdb paths exists
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: 0774
    owner: "{{ couchdb_uid }}"
    group: "{{ couchdb_gid }}"
  with_items:
    - {path: "{{ couchdb_base_path }}", when: true}
    - {path: "{{ couchdb_data_path }}", when: true}
    - {path: "{{ couchdb_config_path }}", when: true}

- name: Ensure couchdb files are installed
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ couchdb_uid }}"
    group: "{{ couchdb_gid }}"
    mode: 0744
  with_items:
    - {src: "{{ role_path }}/templates/labels.j2", dest: "{{ couchdb_base_path }}/labels"}
    - {src: "{{ role_path }}/templates/local.ini.j2", dest: "{{ couchdb_config_path }}/local.ini"}

- name: Ensure couchdb configuration is deployed
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ couchdb_uid }}"
    group: "{{ couchdb_gid }}"
    mode: 0640
  with_items:
    - {src: "{{ role_path }}/templates/env.j2", dest: "{{ couchdb_base_path }}/env"}

- name: Ensure couchdb container image is pulled
  community.docker.docker_image:
    name: "{{ item.image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
  with_items:
    - {image: "{{ couchdb_container_image }}"}

- block:
    - name: Stop existing couchdb container
      ansible.builtin.command:
        cmd: "{{ devture_systemd_docker_base_host_command_docker }} stop {{ couchdb_identifier }}"
      ignore_errors: true

    - name: Ensure couchdb is started for setup
      ansible.builtin.command:
        cmd: '{{ devture_systemd_docker_base_host_command_docker }} run --rm --name={{ couchdb_identifier }} --read-only --detach --user={{ couchdb_uid }}:{{ couchdb_gid }} --hostname={{ couchdb_identifier }} --cap-drop=all --network={{ couchdb_container_network }} --env-file={{ couchdb_base_path }}/env --label-file={{ couchdb_base_path }}/labels --mount type=bind,src={{ couchdb_config_path }},dst="/opt/couchdb/etc/local.d" --mount type=bind,src={{ couchdb_data_path }},dst=/opt/couchdb/data --tmpfs=/tmp:rw,noexec,nosuid,size={{ couchdb_tmp_size }}m {{ couchdb_container_image }}'

    - name: Wait for couchdb to start
      ansible.builtin.pause:
        seconds: 5

    - name: Ensure couchdb system tables are created
      ansible.builtin.command:
        cmd: "{{ devture_systemd_docker_base_host_command_docker }} exec {{ couchdb_identifier }} curl -X PUT http://{{ couchdb_admin_user }}:{{ couchdb_admin_passwd }}@localhost:5984/{{ item.name }}"
      register: couchdb_tables_output
      changed_when: couchdb_tables_output.stdout.find('{"ok":true}') != -1
      failed_when: couchdb_tables_output.stdout.find('{"ok":true}') == -1 and couchdb_tables_output.stdout.find('"file_exists"') == -1
      loop: "{{ couchdb_tables }}"


    - name: Create couchdb users
      ansible.builtin.command:
        cmd: "{{ devture_systemd_docker_base_host_command_docker }} exec {{ couchdb_identifier }} curl -X PUT http://{{ couchdb_admin_user }}:{{ couchdb_admin_passwd }}@localhost:5984/_users/org.couchdb.user:{{ item.name }} -H 'Accept: application/json' -H 'Content-Type: application/json' -d '{{ item | to_json }}'"
      register: couchdb_users_output
      changed_when: couchdb_users_output.stdout.find('{"ok":true}') != -1
      no_log: true # do not log the password
      ignore_errors: true # Ignore errors if user already exists
      loop: "{{ couchdb_users }}"
      when: couchdb_users | length > 0


    - name: Ensure couchdb database permissions are set
      ansible.builtin.command:
        cmd: >
          {{ devture_systemd_docker_base_host_command_docker }} exec {{ couchdb_identifier }} curl -X PUT http://{{ couchdb_admin_user }}:{{ couchdb_admin_passwd }}@localhost:5984/{{ item.name }}/_security -H "Accept: application/json" -H "Content-Type: application/json" -d '{{ item.permission | default(couchdb_default_permissions) | to_json }}'
      register: couchdb_db_permissions_output
      changed_when: couchdb_db_permissions_output.stdout.find('{"ok":true}') != -1
      failed_when: couchdb_db_permissions_output.stdout.find('{"error"') != -1
      loop: "{{ (couchdb_tables_custom | union(couchdb_tables_auto)) }}"
      when: (couchdb_tables_custom | union(couchdb_tables_auto)) | length > 0

    - name: Ensure couchdb is stopped
      ansible.builtin.command:
        cmd: "{{ devture_systemd_docker_base_host_command_docker }} stop {{ couchdb_identifier }}"
  when: couchdb_config_single_node | bool


- name: Ensure couchdb.service installed
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - {src: "{{ role_path }}/templates/systemd/couchdb.service.j2", dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ couchdb_identifier }}.service"}
